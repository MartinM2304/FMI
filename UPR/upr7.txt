/srv/sample... Има примерни данни

if[["${#}" -lt || "${#}" -gt 2]];then
	echo "Must have between 1 and 2 args">&2
	exit 1
fi

if [[! -d "${1}" ]]; then
	echo ""${1}" not a digit"
	exit 2
fi

broken =0

while read file; do
	if [[-e "${file}"]];then
		echo "${file} -> $$(readLink "${file}")"
	else
		broken = $
		
		
		
____________________________________________
зад60

#checks: 2 args, arg1 is readable file, file2 is dir
#for( find all files in given dir :
#	for(all forbidden words):
#		replave with *
# tr "cake" "*" - заменя го със ****, а не с *
# cat file| sed -i   -не знае от къде идват данните
# cat 

while read file;do
	while read word;do
		replace="${echo ${word}"|tr '[a-zA-Z0-9_]' '*')"
		sed -E "s/\b${word}\b/ ${replace}/gi"  #ползваме <b,b> за начало и край на дума, за да хванем кейса с ascakebff(искаме само cake да заменяме)
												//gi- всички срещания с g, i- case insensitive
	done< "${1}"
done < < (find "${2} -type f -name "*.txt"m 2>/dev/null) - ?? zashot moje s ''
____________________________________________
sort -k 2, 2nr -k( може да слагаш к много пъти)
теглиш архив от мудъл
tar -xf file -				NB: -f последно защото очаква веднага файл
mv <rar_name> 5MI0600202- вътре ще има условяита. вътре качваме решение
tar -caf 5MI0600202.tar.xz(име) 5MI0600202(дир)
след това ще имаме архивът който ни трябва

____________________________________________
pid- процес id
ps - подобна на find
ps -u tgg- всички процеси на този user

ctrl+c- праща sigint
sigsegv- seg fault- когато програмта крашне
sigkill- веднага изключва процеса

____________________________________________
#!/bin/bash

#checks:1 arg1
#for every user 
#	print total rss
#	if total>arr; kill process with highest rss

if[["$(whoami)"!= "root"]];then // id -u ==0
	echo "not root"
	exit 1
fi
	# най бързо сумираш с awk '{sum+=1}END'
for user in $(ps -e -o user=| sort|uniq);do
	total_rss="${ps -u "${user}" -o rss= | awk '{sum +=$1}'END{print sum};"
	
	echo "User ${user} total rss: ${total_rss}"
	
	if[["${total_rss}" -gt "${1}]];then
		highest_pid= "$(ps -u "${user}" -o pid= --sort rss|tail -n 1)"  - процеса с най много памет(принти pid на User(без начална колонка))
		sleep 2
		kill -KILL "${highest_pid}"
done
ps -e -o user = |