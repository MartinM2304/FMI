Упр9

//set -u/-e дава грешка ако е недефинирана променлива- виж кое от двете

файлове със специални имена

вместо по нов ред, разделяме файловете по term 0- -print0 и в read -d $'\0'- 
казваме на read а разделя по терм0, а не по нов ред

2021-se_01
#expect:
# user- oracle/grid
#env var ORACLE_HOME containing path to dir
#- ${ORACLE_HOME}/bin/adrci exists and is executable
#-diag_dest= /u01/app/user

# напиши скрипт- 
#check oracle/grid
#check other expectations
#print Megabytes of dir and absolute path to it
#du- КОМАНДА- diskusage- колко място ползва директория на диска
#du -s- изпринти не рекурсивно, а само за общата директория
#du -sm - в мегабайти

export MY_ENV_Var="test test"- в шела ще я направи на енв променлива

echo 

if ! whoami |grep -qE '^(oracle|grid)$';then //
	echo "must be oracle or grid" >&2// printim stdout>stderr( добра практика защото това тук е грешка)
	exit 1;
fi

[[ -n "${ORACLE_HOME}"]]|| {echo "HOME NOT SET" >&2;exit 2}// ako ORACLE_HOME e prazen- shte izprinti tova

еквивалент на 
if [[ -z "${ORACLE_HOME}"]]; then// -z ако е празен стринг изпринти това(-n е ако е непразен не прави нищо)
	echo "";					 // виж test man- за точно тез флагове
	exit 2
fi

ADRCI="${ORACLE_HOME}/bin/adrci"
if [[ ! -x "${ADRCI}"]];then// see what -x in man test does
	echo "adrci not found"
	exit 3;
fi

OUT="$("${ADRCI}" 'exec="show homes"')"

if[[ ${OUT}== 'No ADR homes are set']];then
	echo "${OUT}"
	exit 0;
fi

while read -r ADR_HOME;do //-r защото без него се чупи за \- този символ
	du -sm "/u01/app/$(whoami)/$(ADR_HOME)"
done< <(echo "${OUT}"|tail -n +2| sed -E 's/^ +//')// ко праи тоя регех???



____________________________________________________________________________
2024-IN-01

#expect
#config in env var ARKCONF
#is config

# WHAT to do
# for each server
#what will be synced, confirm, sync

direction=""
flag_d=""
target_server=""

for arg in "${@}";do // всеки арг 1 по 1
	if[["${arg}"=='push']]|| [[ "${arg}"=='pull' ]]then;
		direction="${arg}"
		continue
	fi
	
	if[[ "${arg}"==''-d']];then
		flag_d="--delete"
		continue
	fi
	
	target_server="${arg}"
done

if [[ -z "${target_server}"]];then
	echo "dir already given"
	exit 1
fi

echo "direction:${direction}"
echo "flag_d: ${flag_d}"
echo "target_server: ${target_server}"

____________________________________________________________________________
2023-IN-02- задача с hardlinks

ls/srv/sample-data/02-shell/2023-INF-02/ generate sh -generira shell za zadachata 

ползва се хешСума???
md5sum <file_name>- дава хеш на файла

script:

temp="$(mkdir -d)"- правим вс в тази директория да е хеш1,хеш2,,,
и така файловете със съдържание 123 има 2 хардлинка с този хеш:( от папката)

while read inode num filename;do
	hash = "$(md5sum "${filename}"|cut -d ' ' -f 1)"
done< <(find "${1} -type f -printf '%i %n %p\n'")- инода и  броя хардлинкове


while read hash;do
	files="$(cat "${group_file}" | sort|uniq)"
	count="$(echo "${files}"|cut -d ' ' -f 2)"
	
	//ako grep -v '1$'- значи всичко е с еднакво съдържание, но беь хардлинкове???-май
done < <(find{temp} -type f)